version: "3.8"

x-backend:
  &backend
  build:
    context: ./fast_offer_backend
    dockerfile: Dockerfile
  depends_on:
    postgres:
      condition: "service_started"
      required: true
    redis:
      condition: "service_started"
      required: true
  user: "${UID:-1000}:${GID:-1000}"
  env_file:
    - ".env"
  stdin_open: true
  tty: true
  volumes:
    - ./fast_offer_backend:/app

services:
  api:
    <<: *backend
    ports:
      - "3001:3001"

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq
    entrypoint: []

  frontend:
    build:
      context: ./fast_offer_front
      dockerfile: Dockerfile
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      - api
    volumes:
      - ./fast_offer_front:/app

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5445:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 5s
      retries: 30

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "7963:6379"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  proxy:
    image: nginx:1.23.3-alpine
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "3000:80"
    depends_on:
      - frontend
      - api

volumes:
  pg_data:
  redis_data: